{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ekaterina\\\\Desktop\\\\Website\\\\Website\\\\frontend\\\\src\\\\components\\\\FlashcardList.js\",\n  _s = $RefreshSig$();\n// The import 'useEffect' will run the code and load the components, it does things like fetching data from a server. \n// 'useState' will create and manage pieces of data in components, for example, if we wanted to keep track of flashcards, 'useState' could store them\nimport React, { useEffect, useState } from 'react';\n// 'import axios' is a library that sends requests to server to get or send data\nimport axios from 'axios';\n// Funtion that will get and display list of flashcards from one of APIs\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction FlashcardList() {\n  _s();\n  // Line below initialises a variable called 'flashcards' as an empty list\n  // Later on setFlashcards will be used to update 'flashcards'\n  const [flashcards, setFlashcards] = useState([]);\n  // 'useEffect' function runs when components load for the first time\n  useEffect(() => {\n    // This sends a request to the server to fetch the flashcards \n    axios.get('http://127.0.0.1:8000/flashcards/api/flashcards/')\n    // Once request has succedded the data is saved as 'response.data', then use call 'setFlashcards' to save the data in 'flashcards'\n    .then(response => {\n      setFlashcards(response.data);\n    }).catch(error => {\n      // If error occurred, comman 'console.error(error)' shows the error in the console\n      console.error(error);\n    });\n    // The empty array [] means the code inside runs only once, when components are created\n  }, []);\n\n  // !!THE PART BELOW SUPPOSED TO RENDER THE UI; It defines what will be shown to the user\n  // It is going through and displaying each of our flashcards: 1. Creating unordered list \n  // 2. Each flashcard in the list, item <li> shows a question and corresponding answer\n  // 3. Then we use 'key={flashcard.id}' to create a unique key, so React can keep a track of items during each rendering\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Flashcards\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: flashcards.map(flashcard => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Question:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 25\n        }, this), \" \", flashcard.question, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 73\n        }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Answer:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 25\n        }, this), \" \", flashcard.answer]\n      }, flashcard.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n}\n\n// Makes ' FlashcardList' component available to other folders\n_s(FlashcardList, \"CNvELsNdxbAt7NsvQEGKRJ4YvCU=\");\n_c = FlashcardList;\nexport default FlashcardList;\nvar _c;\n$RefreshReg$(_c, \"FlashcardList\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","FlashcardList","_s","flashcards","setFlashcards","get","then","response","data","catch","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","map","flashcard","question","answer","id","_c","$RefreshReg$"],"sources":["C:/Users/Ekaterina/Desktop/Website/Website/frontend/src/components/FlashcardList.js"],"sourcesContent":["// The import 'useEffect' will run the code and load the components, it does things like fetching data from a server. \r\n// 'useState' will create and manage pieces of data in components, for example, if we wanted to keep track of flashcards, 'useState' could store them\r\nimport React, { useEffect, useState } from 'react';\r\n// 'import axios' is a library that sends requests to server to get or send data\r\nimport axios from 'axios';\r\n// Funtion that will get and display list of flashcards from one of APIs\r\nfunction FlashcardList() {\r\n    // Line below initialises a variable called 'flashcards' as an empty list\r\n    // Later on setFlashcards will be used to update 'flashcards'\r\n    const [flashcards, setFlashcards] = useState([]);\r\n    // 'useEffect' function runs when components load for the first time\r\n    useEffect(() => {\r\n        // This sends a request to the server to fetch the flashcards \r\n        axios.get('http://127.0.0.1:8000/flashcards/api/flashcards/')\r\n            // Once request has succedded the data is saved as 'response.data', then use call 'setFlashcards' to save the data in 'flashcards'\r\n            .then(response => {\r\n                setFlashcards(response.data);\r\n            })\r\n            .catch(error => {\r\n                // If error occurred, comman 'console.error(error)' shows the error in the console\r\n                console.error(error);\r\n            });\r\n    // The empty array [] means the code inside runs only once, when components are created\r\n    }, []); \r\n\r\n    // !!THE PART BELOW SUPPOSED TO RENDER THE UI; It defines what will be shown to the user\r\n    // It is going through and displaying each of our flashcards: 1. Creating unordered list \r\n    // 2. Each flashcard in the list, item <li> shows a question and corresponding answer\r\n    // 3. Then we use 'key={flashcard.id}' to create a unique key, so React can keep a track of items during each rendering\r\n    return (\r\n        <div>\r\n            <h1>Flashcards</h1> {/* Title */}\r\n            <ul>\r\n                {flashcards.map(flashcard => (\r\n                    <li key={flashcard.id}>\r\n                        <strong>Question:</strong> {flashcard.question} <br />\r\n                        <strong>Answer:</strong> {flashcard.answer}\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    );\r\n}\r\n\r\n// Makes ' FlashcardList' component available to other folders\r\nexport default FlashcardList;"],"mappings":";;AAAA;AACA;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD;AACA,OAAOC,KAAK,MAAM,OAAO;AACzB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,SAASC,aAAaA,CAAA,EAAG;EAAAC,EAAA;EACrB;EACA;EACA,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAChD;EACAD,SAAS,CAAC,MAAM;IACZ;IACAE,KAAK,CAACO,GAAG,CAAC,kDAAkD;IACxD;IAAA,CACCC,IAAI,CAACC,QAAQ,IAAI;MACdH,aAAa,CAACG,QAAQ,CAACC,IAAI,CAAC;IAChC,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,IAAI;MACZ;MACAC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;IACxB,CAAC,CAAC;IACV;EACA,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA;EACA;EACA;EACA,oBACIV,OAAA;IAAAY,QAAA,gBACIZ,OAAA;MAAAY,QAAA,EAAI;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,KAAC,eACpBhB,OAAA;MAAAY,QAAA,EACKT,UAAU,CAACc,GAAG,CAACC,SAAS,iBACrBlB,OAAA;QAAAY,QAAA,gBACIZ,OAAA;UAAAY,QAAA,EAAQ;QAAS;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,KAAC,EAACE,SAAS,CAACC,QAAQ,EAAC,GAAC,eAAAnB,OAAA;UAAAa,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACtDhB,OAAA;UAAAY,QAAA,EAAQ;QAAO;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,KAAC,EAACE,SAAS,CAACE,MAAM;MAAA,GAFrCF,SAAS,CAACG,EAAE;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGjB,CACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEd;;AAEA;AAAAd,EAAA,CAtCSD,aAAa;AAAAqB,EAAA,GAAbrB,aAAa;AAuCtB,eAAeA,aAAa;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}